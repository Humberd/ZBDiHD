CREATE OR REPLACE PROCEDURE PS5_1 AS
  BEGIN
    -- zadanie 1a
    SELECT
      P.NAME,
      COUNT(B.ISBN),
      ROUND(AVG(B.RETAIL), 2) AS SREDNIA
    FROM PUBLISHER P
      JOIN BOOKS B ON P.PUBID = B.PUBID
    GROUP BY P.NAME, P.PUBID
    UNION ALL
    SELECT
      'PODSUMOWANIE',
      COUNT(ISBN),
      ROUND(AVG(RETAIL), 2)
    FROM BOOKS;

    -- zadanie 1b
    SELECT
      DECODE(P.NAME, NULL, 'TOTALNIE', P.NAME),
      COUNT(B.ISBN),
      ROUND(AVG(B.RETAIL), 2) AS SREDNIA
    FROM PUBLISHER P
      JOIN BOOKS B ON P.PUBID = B.PUBID
    GROUP BY GROUPING SETS ( (P.NAME, P.PUBID), () );

    -- zadanie 1c
    SELECT
      P.NAME,
      COUNT(B.ISBN),
      ROUND(AVG(B.RETAIL), 2) AS SREDNIA
    FROM PUBLISHER P
      JOIN BOOKS B ON P.PUBID = B.PUBID
    GROUP BY ROLLUP ( (P.NAME, P.PUBID) );

    -- zadanie 2
    SELECT
      C.FIRSTNAME || ' ' || C.LASTNAME,
      O.ORDER#,
      SUM(OI.QUANTITY * B.RETAIL),
      SUM(OI.QUANTITY)
    FROM CUSTOMERS C
      JOIN ORDERS O ON C.CUSTOMER# = O.CUSTOMER#
      JOIN ORDERITEMS OI ON
                           O.ORDER# = OI.ORDER#
      JOIN BOOKS B ON OI.ISBN = B.ISBN
    GROUP BY GROUPING SETS ( (C.FIRSTNAME, C.LASTNAME, C.CUSTOMER#, O.ORDER#), (C.FIRSTNAME, C.LASTNAME, C.CUSTOMER#), (
      ) );
    -- zadanie 3
    SELECT
      EXTRACT(DAY FROM O.ORDERDATE),
      B.CATEGORY,
      SUM(OI.QUANTITY * (B.RETAIL - B.COST)) AS ASDF
    FROM ORDERS O
      JOIN ORDERITEMS OI ON O.ORDER# = OI.ORDER#
      JOIN BOOKS B ON OI.ISBN = B.ISBN
    WHERE EXTRACT(YEAR FROM O.ORDERDATE) = 2005 AND EXTRACT(MONTH FROM O.ORDERDATE) = 4
    GROUP BY GROUPING SETS ((EXTRACT(DAY FROM O.ORDERDATE), B.CATEGORY), (B.CATEGORY))
    ORDER BY B.CATEGORY ASC;

    -- zadanie 4
    SELECT
      EXTRACT(YEAR FROM O.ORDERDATE)        AS ROK,
      EXTRACT(MONTH FROM O.ORDERDATE)       AS MIESIAC,
      C.ZIP,
      ROUND(AVG(OI.QUANTITY * B.RETAIL), 2) AS SREDNIA,
      SUM(OI.QUANTITY)                      AS LICZBA
    FROM CUSTOMERS C
      JOIN ORDERS O ON C.CUSTOMER# = O.CUSTOMER#
      JOIN ORDERITEMS OI ON O.ORDER# = OI.ORDER#
      JOIN BOOKS B ON OI.ISBN = B.ISBN
    GROUP BY
    ROLLUP (EXTRACT(YEAR FROM O.ORDERDATE), EXTRACT(MONTH FROM O.ORDERDATE),
      C.ZIP);

    -- zadanie 5
    SELECT
      TO_CHAR(O.ORDERDATE, 'MON-YYYY') AS CZAS,
      A.LNAME,
      A.FNAME,
      SUM(OI.QUANTITY)                 AS LICZBA
    FROM ORDERS O
      JOIN ORDERITEMS OI ON O.ORDER# = OI.ORDER#
      JOIN BOOKS B ON OI.ISBN = B.ISBN
      JOIN BOOKAUTHOR BA ON B.ISBN = BA.ISBN
      JOIN AUTHOR A ON BA.AUTHORID = A.AUTHORID
    GROUP BY CUBE (TO_CHAR(O.ORDERDATE, 'MON-YYYY'), (A.LNAME, A.FNAME, A.AUTHORID) )
    ORDER BY 1, 2;

    -- zadanie 7
    SELECT
      CUSTOMER#,
      COUNT(ORDER#),
      CASE WHEN COUNT(ORDER#) > 1
        THEN 'STALY KLIENT' END
    FROM ORDERS
    GROUP BY CUSTOMER#;
    -- zadanie 3
    --select * from (select level x from dual connect by  level >=0);

  END PS5_1;